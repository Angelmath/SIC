/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rrhh.sic_rrhh;

import Login.servicio.Funcion;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import rrhh.Entidad.Departamento;
import rrhh.Entidad.Empleado;
import rrhh.Entidad.Multa;
import rrhh.Entidad.Permisos;
import rrhh.servicio.ServiceHb;

/**
 *
 * @author Matheus
 */
public final class permisos_ausentismo extends javax.swing.JPanel {
    Dimension d;
    Empleado emp;
    int turno=1;
    boolean temporal=false;
    String[] fecha= {"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"};
    ChartPanel frame;
    JPanel pa = new JPanel();
    /**
     * Creates new form inicio
     */
    public permisos_ausentismo() {
        initComponents();
        d = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(d.width-100, d.height-61);
        setVisible(false);
        float a1[]= new float[1];
        a1[0]=0;
        String a2[]= new String[]{"0"};
        String vertical= "Horas";
        String horizontal = "Meses";
        String titulo = "historial";
        graficarbarras2(a1, a2, horizontal, vertical, titulo);
    }
    
    public void graficarbarras2(float []y,String []x,String datah,String datav,String titulo)
    {
       DefaultCategoryDataset data = new DefaultCategoryDataset();
        for(int d=0;d<y.length;d++)
        {
         data.setValue(y[d],x[d],x[d]);  
        }
        JFreeChart chart = ChartFactory.createBarChart(titulo,datah,datav,data, PlotOrientation.VERTICAL, false,
true, false);
        frame=new ChartPanel(chart);
        frame.setMouseWheelEnabled(true);
        frame.setVisible(true);
        jPanel1.removeAll();
        jPanel1.add(frame, BorderLayout.CENTER);
        jPanel1.validate();
        jPanel1.setPreferredSize(new Dimension(1000,1000));
        
    }
    
    public void graficarbarras(float []y,String []x,String datah,String datav,String titulo)
    {
        int maximo = y.length;
       float y1[]= new float[y.length];
       String[] x1= new String[x.length];
        for (int i = 0; i<y.length; i++) {
            y1[maximo - 1] = y[i];
            maximo--;
        }
        maximo = x.length;
 
        for (int i = 0; i<x.length; i++) {
            x1[maximo - 1] =x[i];
            maximo--;
        }
       DefaultCategoryDataset data = new DefaultCategoryDataset();
        for(int d=0;d<y.length;d++)
        {
         data.setValue(y1[d],x1[d],x1[d]);  
        }
        JFreeChart chart = ChartFactory.createBarChart(titulo,datah,datav,data, PlotOrientation.VERTICAL, false,
true, false);
        frame=new ChartPanel(chart);
        frame.setMouseWheelEnabled(true);
        frame.setVisible(true);
        jPanel1.removeAll();
        jPanel1.add(frame, BorderLayout.CENTER);
        jPanel1.validate();
        jPanel1.setPreferredSize(new Dimension(1000,1000));
    }  
   
    public void graficarbarrasa(float []y,String []x,String datah,String datav,String titulo)
    {
       int maximo = y.length;
       float y1[]= new float[y.length];
       String[] x1= new String[x.length];
        for (int i = 0; i<y.length; i++) {
            y1[maximo - 1] = y[i];
            maximo--;
        }
        maximo = x.length;
 
        for (int i = 0; i<x.length; i++) {
            x1[maximo - 1] =x[i];
            maximo--;
        }
        
       DefaultCategoryDataset data = new DefaultCategoryDataset();
       
        for(int d=0;d<y.length;d++)
        {
         data.setValue(y1[d],x1[d],x1[d]);  
        }
        JFreeChart chart = ChartFactory.createBarChart(titulo,datah,datav,data, PlotOrientation.VERTICAL, false,
true, false);
        ChartFrame frame=new ChartFrame(titulo,chart);
        frame.pack();
        frame.setVisible(true);
    }  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setEnabled(false);
        setLayout(null);

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel6.setText("Busqueda:");
        add(jLabel6);
        jLabel6.setBounds(20, 10, 100, 30);

        jTextField2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });
        add(jTextField2);
        jTextField2.setBounds(124, 11, 332, 30);

        jTable2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CI", "Nombre", "Departamento", "Fecha Ingreso", "id"
            }
        ));
        jTable2.setRowHeight(24);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setMinWidth(150);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(0).setMaxWidth(150);
            jTable2.getColumnModel().getColumn(3).setMinWidth(150);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(3).setMaxWidth(150);
            jTable2.getColumnModel().getColumn(4).setMinWidth(0);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(0);
            jTable2.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        add(jScrollPane2);
        jScrollPane2.setBounds(20, 60, 1060, 180);

        jComboBox3.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });
        jComboBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jComboBox3MouseReleased(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        add(jComboBox3);
        jComboBox3.setBounds(880, 10, 200, 30);

        jLabel15.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel15.setText("Empleado:");
        add(jLabel15);
        jLabel15.setBounds(22, 259, 70, 30);

        jTextField4.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        add(jTextField4);
        jTextField4.setBounds(110, 260, 310, 30);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setOpaque(true);
        jLabel1.setVisible(false);
        add(jLabel1);
        jLabel1.setBounds(420, 260, 30, 30);

        jComboBox5.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mensual", "Trimestral", "Semestral", "Todos" }));
        jComboBox5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox5ItemStateChanged(evt);
            }
        });
        jComboBox5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jComboBox5MouseReleased(evt);
            }
        });
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        add(jComboBox5);
        jComboBox5.setBounds(520, 260, 190, 30);

        jButton1.setText("Generar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(890, 260, 140, 30);
        jButton1.setVisible(false);

        jPanel1.setLayout(new java.awt.BorderLayout());
        jScrollPane1.setViewportView(jPanel1);
        jPanel1.setVisible(false);

        add(jScrollPane1);
        jScrollPane1.setBounds(270, 300, 610, 290);
        jScrollPane1.setVisible(false);

        jLabel2.setBackground(new java.awt.Color(204, 0, 0));
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setOpaque(true);
        add(jLabel2);
        jLabel2.setBounds(450, 260, 30, 30);
        jLabel2.setVisible(false);

        jButton2.setText("Externo");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(740, 260, 120, 30);

        jLabel3.setBackground(new java.awt.Color(0, 0, 255));
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setOpaque(true);
        add(jLabel3);
        jLabel3.setBounds(480, 260, 30, 30);
        jLabel3.setVisible(false);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed

    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        actualizarbusqueda();        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2KeyReleased
    public void actualizarbusqueda(){
        reporteempleados per = new reporteempleados(2);
        per.start();
    }
    
    public void actualizar(){
        reporteempleados per = new reporteempleados(1);
        per.start();
    }
    
    public class reporteempleados extends Thread {
        int num;
        
        public reporteempleados(int num){
            this.num=num;
        }
        
        public void run() {
            if(num==1){
                llenartablas();
            }
            if(num==2){
                llenartablasselect(jComboBox3,jTable2,jTextField2);
            }
            if(num==3){
                temporal=false;
                //llenar();
            }
        }
    }
    public static int getUltimoDiaDelMes(String anioFin, String mesFin) {
       Calendar calFin = Calendar.getInstance();
       calFin.set(Integer.parseInt(anioFin), Integer.parseInt(mesFin), 1);
       calFin.set(Integer.parseInt(anioFin), Integer.parseInt(mesFin), calFin.getActualMaximum(Calendar.DAY_OF_MONTH));
       Calendar calInicio = Calendar.getInstance();
       calInicio.set(Integer.parseInt(anioFin), Integer.parseInt(mesFin), 1);
       int diffDays= 0;
       while (calInicio.before(calFin) || calInicio.equals(calFin)) {
            if (calInicio.get(Calendar.DAY_OF_WEEK) != Calendar.SUNDAY && calInicio.get(Calendar.DAY_OF_WEEK) != Calendar.SATURDAY) {
                diffDays++;
            }
            calInicio.add(Calendar.DATE, 1);
            }
       return diffDays;
    }
    
    public void llenar2(){
            ServiceHb helper=null;
            ArrayList<String> lst=null;
            Date f = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(f);
            int num=0;
            try{
                if(jComboBox5.getSelectedIndex()==0){
                  num=1;  
                }else if(jComboBox5.getSelectedIndex()==1){
                    num=3;
                }else if(jComboBox5.getSelectedIndex()==2){
                    num=6;
                } else{
                    num=12;
                }
                lst= buscames(num,jLabel2.getText());
                if(lst!=null){
                helper = new ServiceHb();
                helper.iniciarTransaccion();
                String x="";
                String y="";
                for(String i: lst){
                    String mes= i.split("/")[0];
                    String anio= i.split("/")[1];
                    int dias= getUltimoDiaDelMes(anio,mes);
                    String val= i.split("/")[2];
                    List<Permisos> hor = helper.getPermisosByTipoindi((jLabel1.getText()),fecha[Integer.parseInt(mes)],anio);
                    List<Multa> mul = helper.getMultamesByTipo((jLabel1.getText()),fecha[Integer.parseInt(mes)],anio);
                    float multas=0;
                    if(mul!=null){
                        for(Multa z: mul){
                            float temp=480;
                            if(jLabel3.getText().equalsIgnoreCase("Seguridad Fisica")){
                                temp=720;
                            }
                            if(z.getTipo().equalsIgnoreCase("FC")||z.getTipo().equalsIgnoreCase("F. Inj. - Av. con T.")){
                                multas= multas+ temp;
                            }else
                            if(z.getTipo().equalsIgnoreCase("FS")||z.getTipo().equalsIgnoreCase("F. Inj. - Av. sin T.")){
                                multas= multas+ temp;
                            }else
                            if(z.getTipo().equalsIgnoreCase("F")||z.getTipo().equalsIgnoreCase("F. Inj. - No Avisó")){
                                multas= multas+ temp;
                            }else
                            if(z.getTipo().equalsIgnoreCase("A")||z.getTipo().equalsIgnoreCase("Atraso - Avisó")){
                                multas= multas+ Float.parseFloat(z.getMotivo());
                            }else
                            if(z.getTipo().equalsIgnoreCase("AS")||z.getTipo().equalsIgnoreCase("Atraso - No Avisó")){
                                multas= multas+ Float.parseFloat(z.getMotivo());
                            }
                        }
                    }
                    if(hor!=null){
                        float var=0;
                        if(val.equalsIgnoreCase("1")){
                            for(Permisos n: hor){
                                var= var+Float.parseFloat(n.getValor());
                            }
                            float temp=8;
                            if(jLabel3.getText().equalsIgnoreCase("Seguridad Fisica")){
                                temp=12;
                            }
                            var= var+multas;
                            var= ((var/60)/temp)/dias;
                            if(var==0){
                                y= y + "/"+ var;
                            }else{
                                y= y + "/"+ var*100;
                            }
                            
                            x= x + "/"+ fecha[Integer.parseInt(mes)]+" "+anio;
                        }else{
//                            y= y + "/"+ "no existe";
//                            x= x + "/"+ fecha[Integer.parseInt(mes)]+" "+anio;
                        }
                        
                        
                    }else{
                        if(val.equalsIgnoreCase("1")){
                        float temp=8;
                        if(jLabel3.getText().equalsIgnoreCase("Seguridad Fisica")){
                            temp=12;
                        }
                        multas= ((multas/60)/temp)/dias;
                        if(multas==0){
                            y= y + "/"+ multas;
                        }else{
                            y= y + "/"+ multas*100;
                        }    
                        x= x + "/"+ fecha[Integer.parseInt(mes)]+" "+anio;
                        }else{
//                        y= y + "/"+ "no existe";
//                        x= x + "/"+ fecha[Integer.parseInt(mes)]+" "+anio;
                        }
                    }
                }
                helper.cerrarSesion();
                float a1[]= new float[y.split("/").length-1];
                for(int i=0; i<y.split("/").length-1;i++){
                    a1[i]=Float.parseFloat(y.split("/")[i+1]);
                }
                String[] a2= new String[x.split("/").length-1];
                for(int i=0; i<x.split("/").length-1;i++){
                    a2[i]=x.split("/")[i+1];
                }
                String vertical= "% Ausentismo";
                String horizontal = "Meses";
                String titulo = "Historial";
                graficarbarrasa(a1, a2, horizontal, vertical, titulo);
                }
                
            }catch(Exception io){
            
            }
    }

    public Dimension getD() {
        return d;
    }

    public void setD(Dimension d) {
        this.d = d;
    }

    public Empleado getEmp() {
        return emp;
    }

    public void setEmp(Empleado emp) {
        this.emp = emp;
    }

    public int getTurno() {
        return turno;
    }

    public void setTurno(int turno) {
        this.turno = turno;
    }

    public boolean isTemporal() {
        return temporal;
    }

    public void setTemporal(boolean temporal) {
        this.temporal = temporal;
    }

    public String[] getFecha() {
        return fecha;
    }

    public void setFecha(String[] fecha) {
        this.fecha = fecha;
    }

    public ChartPanel getFrame() {
        return frame;
    }

    public void setFrame(ChartPanel frame) {
        this.frame = frame;
    }

    public JPanel getPa() {
        return pa;
    }

    public void setPa(JPanel pa) {
        this.pa = pa;
    }

    public JButton getjButton1() {
        return jButton1;
    }

    public void setjButton1(JButton jButton1) {
        this.jButton1 = jButton1;
    }

    public JButton getjButton2() {
        return jButton2;
    }

    public void setjButton2(JButton jButton2) {
        this.jButton2 = jButton2;
    }

    public JComboBox getjComboBox3() {
        return jComboBox3;
    }

    public void setjComboBox3(JComboBox jComboBox3) {
        this.jComboBox3 = jComboBox3;
    }

    public JComboBox getjComboBox5() {
        return jComboBox5;
    }

    public void setjComboBox5(JComboBox jComboBox5) {
        this.jComboBox5 = jComboBox5;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JLabel getjLabel15() {
        return jLabel15;
    }

    public void setjLabel15(JLabel jLabel15) {
        this.jLabel15 = jLabel15;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    public JLabel getjLabel3() {
        return jLabel3;
    }

    public void setjLabel3(JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }

    public JLabel getjLabel6() {
        return jLabel6;
    }

    public void setjLabel6(JLabel jLabel6) {
        this.jLabel6 = jLabel6;
    }

    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public void setjScrollPane1(JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    public JScrollPane getjScrollPane2() {
        return jScrollPane2;
    }

    public void setjScrollPane2(JScrollPane jScrollPane2) {
        this.jScrollPane2 = jScrollPane2;
    }

    public JTable getjTable2() {
        return jTable2;
    }

    public void setjTable2(JTable jTable2) {
        this.jTable2 = jTable2;
    }

    public JTextField getjTextField2() {
        return jTextField2;
    }

    public void setjTextField2(JTextField jTextField2) {
        this.jTextField2 = jTextField2;
    }

    public JTextField getjTextField4() {
        return jTextField4;
    }

    public void setjTextField4(JTextField jTextField4) {
        this.jTextField4 = jTextField4;
    }
    
    public void llenar(){
            ServiceHb helper=null;
            ArrayList<String> lst=null;
            Date f = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(f);
            int num=0;
            try{
                if(jComboBox5.getSelectedIndex()==0){
                  num=1;  
                }else if(jComboBox5.getSelectedIndex()==1){
                    num=3;
                }else if(jComboBox5.getSelectedIndex()==2){
                    num=6;
                } else{
                    num=12;
                }
                lst= buscames(num,jLabel2.getText());
                if(lst!=null){
                helper = new ServiceHb();
                helper.iniciarTransaccion();
                String x="";
                String y="";
                for(String i: lst){
                    String mes= i.split("/")[0];
                    String anio= i.split("/")[1];
                    int dias= getUltimoDiaDelMes(anio,mes);
                    String val= i.split("/")[2];
                    List<Permisos> hor = helper.getPermisosByTipoindi((jLabel1.getText()),fecha[Integer.parseInt(mes)],anio);
                    List<Multa> mul = helper.getMultamesByTipo((jLabel1.getText()),fecha[Integer.parseInt(mes)],anio);
                    float multas=0;
                    if(mul!=null){
                        for(Multa z: mul){
                                if(z.getTipo().equalsIgnoreCase("FC")||z.getTipo().equalsIgnoreCase("F. Inj. - Av. con T.")){
                                    multas= multas+ Float.parseFloat(z.getMotivo());
                                }else
                                if(z.getTipo().equalsIgnoreCase("FS")||z.getTipo().equalsIgnoreCase("F. Inj. - Av. sin T.")){
                                    multas= multas+ Float.parseFloat(z.getMotivo());
                                }else
                                if(z.getTipo().equalsIgnoreCase("F")||z.getTipo().equalsIgnoreCase("F. Inj. - No Avisó")){
                                    multas= multas+ Float.parseFloat(z.getMotivo());
                                }else
                                if(z.getTipo().equalsIgnoreCase("A")||z.getTipo().equalsIgnoreCase("Atraso - Avisó")){
                                    multas= multas+ Float.parseFloat(z.getMotivo());
                                }else
                                if(z.getTipo().equalsIgnoreCase("AS")||z.getTipo().equalsIgnoreCase("Atraso - No Avisó")){
                                    multas= multas+ Float.parseFloat(z.getMotivo());
                                }
                            }
                    }
                    if(hor!=null){
                        float var=0;
                        if(val.equalsIgnoreCase("1")){
                            for(Permisos n: hor){
                                var= var+Float.parseFloat(n.getValor());
                            }
                            float temp=8;
                            if(jLabel3.getText().equalsIgnoreCase("Seguridad Fisica")){
                                temp=12;
                            }
                            var= var+multas;
                            var= ((var/60)/temp)/dias;
                            if(var==0){
                                y= y + "/"+ var;
                            }else{
                                y= y + "/"+ var*100;
                            }
                            
                            x= x + "/"+ fecha[Integer.parseInt(mes)]+" "+anio;
                        }else{
//                            y= y + "/"+ "no existe";
//                            x= x + "/"+ fecha[Integer.parseInt(mes)]+" "+anio;
                        }
                        
                        
                    }else{
                        if(val.equalsIgnoreCase("1")){
                        float temp=8;
                        if(jLabel3.getText().equalsIgnoreCase("Seguridad Fisica")){
                            temp=12;
                        }
                        multas= ((multas/60)/temp)/dias;
                        if(multas==0){
                            y= y + "/"+ multas;
                        }else{
                            y= y + "/"+ multas*100;
                        }    
                        x= x + "/"+ fecha[Integer.parseInt(mes)]+" "+anio;
                        }else{
//                        y= y + "/"+ "no existe";
//                        x= x + "/"+ fecha[Integer.parseInt(mes)]+" "+anio;
                        }
                    }
                }
                helper.cerrarSesion();
                float a1[]= new float[y.split("/").length-1];
                for(int i=0; i<y.split("/").length-1;i++){
                    a1[i]=Float.parseFloat(y.split("/")[i+1]);
                }
                String[] a2= new String[x.split("/").length-1];
                for(int i=0; i<x.split("/").length-1;i++){
                    a2[i]=x.split("/")[i+1];
                }
                String vertical= "% Ausentismo";
                String horizontal = "Meses";
                String titulo = "Historial";
                graficarbarras(a1, a2, horizontal, vertical, titulo);
                }
                
            }catch(Exception io){
            
            }
    }
    
    public ArrayList<String> buscames(int i, String fecha){
        Date actual = new Date();
        ArrayList<String> lst= new ArrayList<String>();
        String f = fecha;
        String varios[] = f.split("/");
        Calendar c = Calendar.getInstance();
        Calendar fechaFin = new GregorianCalendar();
        fechaFin.setTime(actual);
        int mesactual= c.get(Calendar.MONTH);
        int mesanio= c.get(Calendar.YEAR);
        Calendar fechaInicio = new GregorianCalendar();
        fechaInicio.set(Integer.parseInt(varios[2]), Integer.parseInt(varios[1])-1, 1);
        c.setTimeInMillis(fechaFin.getTime().getTime() - fechaInicio.getTime().getTime());
        int dia = c.get(Calendar.DAY_OF_YEAR);
        int mes = c.get(Calendar.MONTH);
        int anio = c.get(Calendar.YEAR);
        int temp=0;
        if((mesanio-Integer.parseInt(varios[2]))==1 && mes==0){
            mes=11;
        }
        for(int x=0; x<i;x++){
            String v="1";
            if(mes>=x){
                v="1";
            }else{
                v="0";
            }
            if(mesactual-temp>=0){
                lst.add((mesactual-temp)+"/"+mesanio+"/"+v);
            }else{
                lst.add((mesactual-temp+12)+"/"+(mesanio-1)+"/"+v);
            }
            temp++;
        }
        return lst;
        
    }
    
    public void llenartablasselect(JComboBox combo, JTable tabla, JTextField texto){
        try{
            ServiceHb helper = new ServiceHb();
            helper.iniciarTransaccion();
            List<Empleado> empleados=null;
            if(combo.getSelectedItem().toString().equalsIgnoreCase("ALL")){
                empleados = helper.getPersonasByTipoespecial(texto.getText());
            }else{
                empleados = helper.getPersonasByTipoespecialbusqueda(combo.getSelectedItem().toString(),texto.getText());
            }
            DefaultTableModel temp = (DefaultTableModel) tabla.getModel();
            for(int i=temp.getRowCount()-1;i>=0;i--){
                temp.removeRow(i);
            }
            if(empleados!=null){
                for(int i=0; i<empleados.size();i++){
                    if(tabla.getRowCount()< empleados.size()){
                        DefaultTableModel tempa = (DefaultTableModel) tabla.getModel();
                        Object nuevo[]= {tempa.getRowCount()+1,"",""};
                        tempa.addRow(nuevo);
                    }
                    String campo1=(empleados.get(i).getCid());
                    String campo2=empleados.get(i).getNombre1()+" "+empleados.get(i).getNombre2()+" "+empleados.get(i).getApellido1()+" "+empleados.get(i).getApellido2();
                    String campo3=empleados.get(i).getDeptEmpl().getDepartamento().getNombre();
                    String campo4="";
                    if(empleados.get(i).getFechaIngreso()!=null){
                        campo4=Funcion.DateFormat(empleados.get(i).getFechaIngreso());
                    }else{
                        
                    }
                    tabla.getModel().setValueAt(campo1, i, 0);
                    tabla.getModel().setValueAt(campo2, i, 1);
                    tabla.getModel().setValueAt(campo3, i, 2);
                    tabla.getModel().setValueAt(campo4, i, 3);
                }
            }
          
            helper.cerrarSesion();
        }
        catch(Exception io){
            
        }
    }
    
    public void llenartablas(){
        try{
            ServiceHb helper = new ServiceHb();
            helper.iniciarTransaccion();
            List<Departamento> dept = helper.getdepartamentosByTipo();
            
            jComboBox3.removeAllItems();
            
            jComboBox3.addItem("ALL");
            
            for(Departamento i: dept){
                jComboBox3.addItem(i.getNombre());
            }
            helper.cerrarSesion();
            //actualizarbusqueda();
        }
        catch(Exception io){
            
        }
    }
    
    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int row = jTable2.rowAtPoint(evt.getPoint());
        jTextField4.setText(jTable2.getValueAt(row, 1).toString());
        jLabel1.setText(jTable2.getValueAt(row, 4).toString());
        jLabel2.setText(jTable2.getValueAt(row, 3).toString());
        jLabel3.setText(jTable2.getValueAt(row, 2).toString());
//        reporteempleados per = new reporteempleados(3);
//        per.start();
    }//GEN-LAST:event_jTable2MouseClicked

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        actualizarbusqueda();
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jComboBox3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox3MouseReleased

    }//GEN-LAST:event_jComboBox3MouseReleased

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed

    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox5ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ItemStateChanged

    private void jComboBox5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox5MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5MouseReleased

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if(jLabel1.getText()!=null){
            llenar();
        }else{
            JOptionPane.showMessageDialog(null,"Seleccione un Empleado");
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        if(jLabel1.getText()!=null){
            llenar2();
        }else{
            JOptionPane.showMessageDialog(null,"Seleccione un Empleado");
        }
    }//GEN-LAST:event_jButton2MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
