/*
* To change this template, choose Tools | Templates
* and open the template in the editor.
*/
package Bitacora.acceso;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import Bitacora.servicio.ServiceHb;
import Bitacora.tablas.Monitor;

/**
 *
 * @author Angelmath
 */
public class Login extends javax.swing.JFrame {
    ServiceHb service =null;
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        dispose();
        setUndecorated(true);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(true);
        setLocationRelativeTo(null);
        setVisible(true);
    }
    
    public JLabel getjLabel3() {
        return jLabel3;
    }
    
    public void setjLabel3(JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Access IC");
        setBackground(new java.awt.Color(0, 0, 0));
        setIconImage(getIconImage());
        setPreferredSize(new java.awt.Dimension(350, 526));
        setResizable(false);

        jPanel1.setEnabled(false);
        jPanel1.setMinimumSize(new java.awt.Dimension(350, 527));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 526));
        jPanel1.setLayout(null);

        jTextField1.setFont(new java.awt.Font("Roboto Thin", 0, 12)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setBorder(null);
        jTextField1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jTextField1.setMinimumSize(new java.awt.Dimension(160, 25));
        jTextField1.setPreferredSize(new java.awt.Dimension(160, 25));
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(122, 236, 160, 29);

        jPasswordField1.setFont(new java.awt.Font("Roboto Thin", 0, 12)); // NOI18N
        jPasswordField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPasswordField1.setBorder(null);
        jPasswordField1.setMinimumSize(new java.awt.Dimension(160, 25));
        jPasswordField1.setPreferredSize(new java.awt.Dimension(160, 25));
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
        });
        jPanel1.add(jPasswordField1);
        jPasswordField1.setBounds(122, 288, 160, 29);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenesnew/boton-ingresar.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
        });
        jLabel2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel2KeyPressed(evt);
            }
        });
        jPanel1.add(jLabel2);
        jLabel2.setBounds(150, 360, 99, 28);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenesnew/boton-salir.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel5MouseExited(evt);
            }
        });
        jPanel1.add(jLabel5);
        jLabel5.setBounds(260, 360, 49, 28);

        jLabel6.setFont(new java.awt.Font("Roboto Light", 0, 13)); // NOI18N
        jLabel6.setText("Usuario");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(39, 238, 50, 20);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenesnew/icono-user.png"))); // NOI18N
        jLabel9.setAlignmentY(0.0F);
        jPanel1.add(jLabel9);
        jLabel9.setBounds(280, 238, 34, 25);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenesnew/icono-password.png"))); // NOI18N
        jPanel1.add(jLabel8);
        jLabel8.setBounds(280, 290, 34, 25);

        jLabel7.setFont(new java.awt.Font("Roboto Light", 0, 13)); // NOI18N
        jLabel7.setText("Constraseña");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(40, 290, 80, 20);

        jLabel1.setFont(new java.awt.Font("Roboto Medium", 0, 10)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Error de Usuario o Contraseña");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
        });
        jPanel1.add(jLabel1);
        jLabel1.setBounds(120, 320, 150, 20);
        jLabel1.setVisible(false);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenesnew/intro-bitacora.png"))); // NOI18N
        jLabel3.setOpaque(true);
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 350, 526);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public ServiceHb getService() {
        return service;
    }
    
    public void setService(ServiceHb service) {
        this.service = service;
    }
    
    public JPanel getjPanel1() {
        return jPanel1;
    }
    
    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }
    
    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        if(getjTextField1().getText().equalsIgnoreCase("") || getjTextField1().getText().equalsIgnoreCase("Usuario")){
            getjTextField1().setText("");
        }
    }//GEN-LAST:event_jTextField1FocusGained
    
    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        if(getjTextField1().getText().equalsIgnoreCase("") || getjTextField1().getText().equalsIgnoreCase("Usuario")){
            getjTextField1().setText("Usuario");
        }
    }//GEN-LAST:event_jTextField1FocusLost
    
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        ImageIcon icono = new ImageIcon(getClass().getResource("/imagenesnew/boton-ingresar-hover.png"));
        jLabel2.setIcon(icono); // NOI18N
    }//GEN-LAST:event_jLabel2MouseEntered
    
    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
        ImageIcon icono = new ImageIcon(getClass().getResource("/imagenesnew/boton-ingresar.png"));
        jLabel2.setIcon(icono); // NOI18N
    }//GEN-LAST:event_jLabel2MouseExited
    
    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        service = new ServiceHb();
        List<Monitor> mn1 = null;
        Monitor mnr1=null;
        Monitor mnr2=null;
        Monitor mnr3=null;
        String password="";
        
        try {
            service.iniciarTransaccion();
            mn1=service.getMonitores();
            service.confirmarTransaccion();
            service.cerrarTransaccion();
            
            for(int i=0; i< mn1.size(); i++){
                password = new String(getjPasswordField1().getPassword());
                if(mn1.get(i).getUsuario().equalsIgnoreCase(getjTextField1().getText()) && mn1.get(i).getContrasenia().equalsIgnoreCase(password)){
                    mnr1=mn1.get(i);
                    mn1.remove(i);
                    setVisible(false);
                    String sector="";
                    String direccion="";
                    String base="";
                    try{
                        // Abrimos el archivo
                        FileInputStream fstream = new FileInputStream("C:\\IC.txt");
                        // Creamos el objeto de entrada
                        DataInputStream entrada = new DataInputStream(fstream);
                        // Creamos el Buffer de Lectura
                        BufferedReader buffer = new BufferedReader(new InputStreamReader(entrada));
                        String strLinea;
                        
                        // Leer el archivo linea por linea
                        while ((strLinea = buffer.readLine()) != null)   {
                            // Imprimimos la línea por pantalla
                            sector=strLinea;        
                        }
                        // Cerramos el archivo
                        entrada.close();
                    }catch (Exception e){ //Catch de excepciones
                        System.err.println("Ocurrio un error: " + e.getMessage());
                    }
                    
                    try{
                        // Abrimos el archivo
                        FileInputStream fstream = new FileInputStream("C:\\IC2.txt");
                        // Creamos el objeto de entrada
                        DataInputStream entrada = new DataInputStream(fstream);
                        // Creamos el Buffer de Lectura
                        BufferedReader buffer = new BufferedReader(new InputStreamReader(entrada));
                        String strLinea;
                        
                        // Leer el archivo linea por linea
                        while ((strLinea = buffer.readLine()) != null)   {
                            // Imprimimos la línea por pantalla
                            direccion=strLinea;
                        }
                        // Cerramos el archivo
                        entrada.close();
                    }catch (Exception e){ //Catch de excepciones
                        System.err.println("Ocurrio un error: " + e.getMessage());
                    }
                    
                    new Cuadro(mnr1,sector,base,direccion);
                }
            }
            if(mnr1==null){
                JOptionPane.showMessageDialog(null, "Fallo en Usuario/Contraseña");
            }
        } catch (Exception ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel2MouseClicked
    
    private void jLabel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseExited
        ImageIcon icono = new ImageIcon(getClass().getResource("/imagenesnew/boton-salir.png"));
        jLabel5.setIcon(icono); // NOI18N
    }//GEN-LAST:event_jLabel5MouseExited
    
    private void jLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseEntered
        ImageIcon icono = new ImageIcon(getClass().getResource("/imagenesnew/boton-salir-azul-hover.png"));
        jLabel5.setIcon(icono); // NOI18N
    }//GEN-LAST:event_jLabel5MouseEntered
    
    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel5MouseClicked
    
    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        
    }//GEN-LAST:event_jTextField1KeyTyped
    
    private void jLabel2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel2KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            logeo();
        }
    }//GEN-LAST:event_jLabel2KeyPressed
    
    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            logeo();
        }
    }//GEN-LAST:event_jTextField1KeyPressed
    
    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            logeo();
        }
    }//GEN-LAST:event_jPasswordField1KeyPressed
    
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        
        
    }//GEN-LAST:event_jLabel1MouseClicked
    
    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        
    }//GEN-LAST:event_jLabel1MouseEntered
    
    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        
    }//GEN-LAST:event_jLabel1MouseExited
    
    public void logeo(){
        service = new ServiceHb();
        List<Monitor> mn1 = null;
        Monitor mnr1=null;
        Monitor mnr2=null;
        Monitor mnr3=null;
        String password="";
        try {
            service.iniciarTransaccion();
            mn1=service.getMonitores();
            service.confirmarTransaccion();
            service.cerrarTransaccion();
            
            for(int i=0; i< mn1.size(); i++){
                password = new String(getjPasswordField1().getPassword());
                if(mn1.get(i).getUsuario().equalsIgnoreCase(getjTextField1().getText()) && mn1.get(i).getContrasenia().equalsIgnoreCase(password)){
                    mnr1=mn1.get(i);
                    mn1.remove(i);
                    setVisible(false);
                    String sector="";
                    String direccion="";
                    String base="";
                    try{
                        // Abrimos el archivo
                        FileInputStream fstream = new FileInputStream("C:\\IC.txt");
                        // Creamos el objeto de entrada
                        DataInputStream entrada = new DataInputStream(fstream);
                        // Creamos el Buffer de Lectura
                        BufferedReader buffer = new BufferedReader(new InputStreamReader(entrada));
                        String strLinea;
                        // Leer el archivo linea por linea
                        while ((strLinea = buffer.readLine()) != null)   {
                            // Imprimimos la línea por pantalla
                            System.out.println (strLinea);
                            sector=strLinea;
                        }
                        // Cerramos el archivo
                        entrada.close();
                    }catch (Exception e){ //Catch de excepciones
                        System.err.println("Ocurrio un error: " + e.getMessage());
                    }
                    try{
                        // Abrimos el archivo
                        FileInputStream fstream = new FileInputStream("C:\\IC2.txt");
                        // Creamos el objeto de entrada
                        DataInputStream entrada = new DataInputStream(fstream);
                        // Creamos el Buffer de Lectura
                        BufferedReader buffer = new BufferedReader(new InputStreamReader(entrada));
                        String strLinea;
                        
                        // Leer el archivo linea por linea
                        while ((strLinea = buffer.readLine()) != null)   {
                            // Imprimimos la línea por pantalla
                            direccion=strLinea;
                        }
                        // Cerramos el archivo
                        entrada.close();
                    }catch (Exception e){ //Catch de excepciones
                        System.err.println("Ocurrio un error: " + e.getMessage());
                    }
                    new Cuadro(mnr1,sector,base,direccion);
                }
            }
            if(mnr1==null){
                jLabel1.setVisible(true);
            }
        } catch (Exception ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
    
    public JLabel getjLabel1() {
        return jLabel1;
    }
    
    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }
    
    public JTextField getjTextField1() {
        return jTextField1;
    }
    
    public void setjTextField1(JTextField jTextField1) {
        this.jTextField1 = jTextField1;
    }
    
    public JPasswordField getjPasswordField1() {
        return jPasswordField1;
    }
    
    public void setjPasswordField1(JPasswordField jPasswordField1) {
        this.jPasswordField1 = jPasswordField1;
    }
    
    
    public JLabel getjLabel2() {
        return jLabel2;
    }
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("imagenes/icon-caja.png"));
        return retValue;
    }
    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
